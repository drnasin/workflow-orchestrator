name: Tests

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  test-linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: ['8.3', '8.4']

    name: PHP ${{ matrix.php }} - Ubuntu

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pdo, pdo_sqlite, redis, xdebug
          coverage: xdebug
          ini-values: error_reporting=E_ALL

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Check Redis connection
        run: |
          php -r "
          if (extension_loaded('redis')) {
            try {
              \$redis = new Redis();
              \$redis->connect('127.0.0.1', 6379);
              echo 'Redis connection: OK' . PHP_EOL;
              \$redis->close();
            } catch (Exception \$e) {
              echo 'Redis connection failed: ' . \$e->getMessage() . PHP_EOL;
            }
          } else {
            echo 'Redis extension not loaded' . PHP_EOL;
          }
          "

      - name: Run test suite
        run: composer test

  test-macos:
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        php: ['8.3', '8.4']

    name: PHP ${{ matrix.php }} - macOS

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start Redis Server
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: '7.x'
          auto-start: true

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pdo, pdo_sqlite, redis, xdebug
          coverage: xdebug
          ini-values: error_reporting=E_ALL

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Check Redis connection
        run: |
          php -r "
          if (extension_loaded('redis')) {
            try {
              \$redis = new Redis();
              \$redis->connect('127.0.0.1', 6379);
              echo 'Redis connection: OK' . PHP_EOL;
              \$redis->close();
            } catch (Exception \$e) {
              echo 'Redis connection failed: ' . \$e->getMessage() . PHP_EOL;
            }
          } else {
            echo 'Redis extension not loaded' . PHP_EOL;
          }
          "

      - name: Run test suite
        run: composer test

  test-windows:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        php: ['8.3', '8.4']

    name: PHP ${{ matrix.php }} - Windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pdo, pdo_sqlite
          coverage: none
          ini-values: error_reporting=E_ALL

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run test suite (Redis tests will be skipped)
        run: composer test

  test-lowest-dependencies:
    runs-on: ubuntu-latest
    name: PHP 8.3 - Lowest Dependencies

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_sqlite, redis, xdebug
          coverage: xdebug

      - name: Install lowest dependencies
        run: composer update --prefer-lowest --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Run test suite
        run: composer test